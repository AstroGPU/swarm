#!/bin/bash
#
#  This script is intended to be called from 'make test'. See 'Usage' below
#  for how it works and how to call it from the command line.
#

#############
############# Input argument validation
#############

if [ "$TEST" == "" -o "$RUN" == "" -o "$PREFIX" == "" ]; then
	cat <<EOT
Error:

	Environment variables TEST, RUN and PREFIX have be set for this
	script to run.

Usage:

	env TEST=<test_exe_dir> RUN=<test_run_dir> PREFIX=<swarm_dist_dir> $0

where:

	\$PREFIX -- base directory of the distribution (e.g., $PREFIX/bin is
	            where the executables are)
	\$TEST   -- directory where the test executables and reference data is
	            (usually $PREFIX/test/<thistestname>)
	\$RUN    -- directory where the test is being run (and where it should
	            create temporaries, outputs, etc...)

	The current working directory for this script is \$RUN. The script
	may assume this directory is initially empty, unless another script
	from the same test suite left something in it (in this test run).

	Specific to this script: if called as xxxxx.create variant, it will
	generate the reference file against which to compare further tests.
EOT
	exit -1
fi

EXE=`basename "$0"`
CREATE=`expr match "$EXE" '.*.create$'`

if [ "$CREATE" == "0" -a ! -f "$TEST/output.ref" ]; then
	echo "Reference test output '$TEST/output.ref' does not exist. Have you created it using "`basename $0 .test`".create ?";
	exit -1
fi

BIN=$PREFIX/bin

#############
############# Test run
#############

# Redirect the standard output to output.log, but keep a copy in file handle 3
exec 3>&1
exec 1>output.log

echo
echo === Integrating =========================================================================================
echo

$BIN/swarm_tutorial_cpu 2>&1 

echo
echo === Done ================================================================================================
echo

# Restore the standard output
exec 1>&3

#############
############# Comparison to reference
#############

if [[ "$CREATE" != "0" ]]; then
	cp -a output.log "$TEST/output.ref" && echo "Reference test output created in $TEST/output.ref."
else
	cmp output.log "$TEST/output.ref" &&
	(
		echo "Test succeeded. Additional outputs in $RUN/output.log"
		true
	) || (
		echo "Test failed. Output ($RUN/output.log) differs from what was expected ($TEST/output.ref)."
		echo "The difference (UNIX diff):"
		echo
		diff output.log $TEST/output.ref
		false
	)
fi
